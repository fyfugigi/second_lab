// Імпортуємо основну бібліотеку React, необхідну для створення React-компонентів.
import React from 'react';
// Імпортуємо файл CSS, який містить стилі для цього компонента Cell.
// Ці стилі будуть застосовані до HTML-елементів, що рендеряться цим компонентом.
import './Cell.css';

// Оголошуємо інтерфейс TypeScript під назвою CellProps.
// Інтерфейси в TypeScript використовуються для визначення структури об'єктів.
// У цьому випадку він визначає типи пропсів (властивостей), які очікує отримати компонент Cell.
interface CellProps {
  // Визначаємо пропс 'value'. Він може мати одне з трьох строкових значень: 'X', 'O' або null.
  // 'X' та 'O' ймовірно представляють символи гравців у грі (наприклад, хрестики-нулики).
  // null вказує на те, що клітинка порожня.
  value: 'X' | 'O' | null;
  // Визначаємо пропс 'onClick'. Це повинна бути функція, яка не приймає жодних аргументів
  // і не повертає жодного значення (void). Ця функція буде викликатися, коли користувач
  // клікає на елемент, який рендерить цей компонент.
  onClick: () => void;
}

// Оголошуємо функціональний компонент React під назвою Cell.
// React.FC<CellProps> вказує, що це функціональний компонент, який приймає пропси,
// що відповідають інтерфейсу CellProps.
// Використовуємо деструктуризацію об'єкта пропсів ({ value, onClick }), щоб отримати
// значення value та onClick безпосередньо з переданого об'єкта пропсів.
const Cell: React.FC<CellProps> = ({ value, onClick }) => {
  // Функціональний компонент повинен повертати JSX (JavaScript XML),
  // який описує структуру UI, що буде відрендерена.
  return (
    // Створюємо HTML-елемент <div>.
    // className="cell" додає CSS-клас 'cell' до цього div, щоб застосувати стилі з Cell.css.
    // onClick={onClick} додає обробник події 'click'. Коли відбувається клік на цьому div,
    // буде викликана функція 'onClick', яка була передана як пропс до цього компонента.
    <div className="cell" onClick={onClick}>
      {/* Відображаємо значення пропса 'value' всередині div.
          Якщо value буде 'X', 'O' або null, саме це значення буде відображено в клітинці. */}
      {value}
    </div>
  );
};

// Експортуємо компонент Cell, щоб його можна було імпортувати та використовувати в інших частинах
// React-додатку (наприклад, в компоненті, який відображає ігрове поле).
export default Cell;